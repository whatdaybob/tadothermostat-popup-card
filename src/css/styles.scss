// @import 'mixins';
@mixin vendor-prefix($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}

@mixin toggle-vis-hidden($vis_delay, $opac_delay) {
  transition-property: visibility, opacity;
  transition-delay: $vis_delay, $opac_delay;
  visibility: hidden;
  opacity: 0;
  transition-timing-function: ease-in-out;
}
@mixin toggle-vis-visible($vis_delay, $opac_delay) {
  visibility: visible;
  opacity: 1;
  transition-property: visibility, opacity;
  transition-delay: $vis_delay, $opac_delay;
  transition-duration: $vis_delay, $opac_delay;
  transition-timing-function: ease-in-out;
}

@mixin slide-card($left) {
  position: absolute;
  left: $left;
  transition-property: left;
  transition-delay: 0s;
  transition-duration: 0.5s;
  transition-timing-function: ease-in-out;
}

@mixin toggle-vis-flex($flex_from, $flex_delay, $flex_dur) {
  flex: 0 0 $flex_from;
  transition-property: flex;
  transition-delay: $flex_delay;
  transition-duration: $flex_dur;
  transition-timing-function: ease-in-out;
}
@mixin inner-flex {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  overflow: hidden;
}
// BASE
:host *:focus {
  outline: -webkit-focus-ring-color auto 0px;
}
:host * {
  @include vendor-prefix('box-sizing', 'border-box');
}
.popup-inner {
  max-height: 600px;
  min-height: 600px;
  max-width: 400px;
  width: 100%;
  display: flex;
  overflow: hidden;
  color: white;
}

$temps: (
  5: linear-gradient(rgb(60, 150, 114), rgb(60, 134, 139)),
  6: linear-gradient(rgb(60, 153, 115), rgb(57, 139, 142)),
  7: linear-gradient(rgb(60, 158, 116), rgb(54, 144, 143)),
  8: linear-gradient(rgb(61, 162, 117), rgb(51, 147, 142)),
  9: linear-gradient(rgb(61, 166, 117), rgb(48, 149, 140)),
  10: linear-gradient(rgb(61, 170, 118), rgb(45, 152, 138)),
  11: linear-gradient(rgb(62, 174, 118), rgb(42, 154, 135)),
  12: linear-gradient(rgb(62, 178, 119), rgb(40, 157, 132)),
  13: linear-gradient(rgb(62, 182, 119), rgb(37, 159, 129)),
  14: linear-gradient(rgb(62, 187, 119), rgb(34, 162, 125)),
  15: linear-gradient(rgb(62, 191, 119), rgb(31, 164, 120)),
  16: linear-gradient(rgb(63, 194, 119), rgb(28, 166, 116)),
  17: linear-gradient(rgb(66, 196, 120), rgb(26, 169, 110)),
  18: linear-gradient(rgb(68, 198, 120), rgb(23, 171, 105)),
  19: linear-gradient(rgb(255, 208, 0), rgb(255, 187, 0)),
  20: linear-gradient(rgb(255, 197, 0), rgb(255, 170, 0)),
  21: linear-gradient(rgb(255, 186, 0), rgb(255, 153, 0)),
  22: linear-gradient(rgb(255, 174, 0), rgb(255, 136, 0)),
  23: linear-gradient(rgb(255, 163, 0), rgb(255, 119, 0)),
  24: linear-gradient(rgb(255, 152, 0), rgb(255, 102, 0)),
  25: linear-gradient(rgb(255, 140, 0), rgb(255, 85, 0)),
  off: linear-gradient(rgb(159, 179, 194), rgb(104, 131, 150)),
);

@each $class, $rule in $temps {
  .popup-inner.temp-#{$class} {
    background: $rule;
  }
}

.panel-btn {
  width: 2em;
  height: 2em;
  border-radius: 2em;
  fill: hsla(0, 0%, 100%, 0.2);
}
.btn {
  &__holder {
    &.options {
      @include toggle-vis-flex(100px, 0s, 0.5s);
      @include inner-flex();
      align-items: flex-start;
      justify-content: flex-end;
      flex-direction: row;
      :host([temp_selection]) & {
        @include toggle-vis-flex(0px, 0s, 0.5s);
      }
    }
    &.selection {
      @include toggle-vis-flex(0px, 0s, 0.5s);
      @include inner-flex();
      :host([temp_selection]) & {
        @include toggle-vis-flex(75px, 0s, 0.5s);
        flex-direction: row;
        justify-content: space-between;
      }
    }
  }

  &__airqual {
    @include toggle-vis-visible(0s, 0.5s);
    margin: 20px;
    width: 28px;
    height: 28px;
    pointer-events: all;
    svg {
      pointer-events: none;
      fill: rgb(53, 146, 150);
    }
    :host([temp_selection]) & {
      @include toggle-vis-hidden(0.5s, 0s);
      pointer-events: none;
    }
  }

  &__cancel {
    padding: 0 1.5em;
    border-radius: 1.25em;
    line-height: 2.5;
    color: rgb(33, 57, 83);
    border: 1px solid rgb(33, 57, 83);
    text-align: center;
    background-color: rgb(255, 255, 255);
    width: 40%;
    margin: 0px auto;
  }
  &__back {
    pointer-events: none;
    @include toggle-vis-hidden(0.5s, 0s);
    svg {
      pointer-events: none;
    }
    :host([temp_selection]) & {
      pointer-events: all;
      margin: 20px;
      width: 28px;
      height: 28px;
      @include toggle-vis-visible(0s, 0.5s);
    }
  }
  &__confirm {
    pointer-events: none;
    @include toggle-vis-hidden(0.5s, 0s);
    svg {
      pointer-events: none;
    }
    :host([temp_selection]) & {
      pointer-events: all;
      margin: 20px;
      width: 28px;
      height: 28px;
      @include toggle-vis-visible(0s, 0.5s);
    }
  }
}

input[type='range'] {
  background-color: transparent;
  -webkit-appearance: none;
  transform: rotate(-90deg);
  -ms-writing-mode: bt-lr;
  writing-mode: bt-lr;
  position: absolute;
  top: 0px;
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    border: 1px solid #000000;
    height: 36px;
    width: 16px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    margin-top: -14px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; /* Add cool effects to your sliders! */
    visibility: hidden;
  }
  &::-moz-range-thumb {
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
    border: 1px solid #000000;
    height: 36px;
    width: 16px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    visibility: hidden;
  }
  &::-ms-thumb {
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;
    border: 1px solid #000000;
    height: 36px;
    height: 36px;
    width: 16px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    visibility: hidden;
  }
}

.track {
  @include toggle-vis-hidden(0.5s, 0s);
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="450" height="472" viewBox="0 0 450 472" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M199 22L0 22L3.93402e-05 472L450 472L450 22H251C251 36.3594 239.359 48 225 48C210.641 48 199 36.3594 199 22Z"    fill="white"  /><path fill-rule="evenodd" clip-rule="evenodd" d="M203 22C203 9.84974 212.85 0 225 0C237.15 0 247 9.84974 247 22C247 34.1503 237.15 44 225 44C212.85 44 203 34.1503 203 22ZM220 12L218.5 10.5L225 4L231.5 10.5L230 12L225 7L220 12ZM231.5 33.5L230 32L225 37L220 32L218.5 33.5L225 40L231.5 33.5Z"    fill="white"  /></svg>');
  background-position: center 0;
  background-repeat: no-repeat;
  background-clip: padding-box;
  padding: 22px 0 0;
  box-sizing: content-box;
  :host([temp_selection]) & {
    @include toggle-vis-visible(0s, 0.5s);
  }
}

.thermostat {
  margin: auto;
  &:hover {
    transform: scale(1.03);
  }
  &.mousedown {
    transform: scale(0.95);
  }
  :host([temp_selection]) & {
    flex: 0 0 444px;
    margin: 31px auto 50px auto;
  }
}

.tado {
  position: relative;
  &-card {
    @include slide-card(0px);
    .airquality & {
      @include slide-card(-400px);
    }
    &-top {
      @include toggle-vis-flex(100px, 0s, 0.5s);
      @include inner-flex();
      :host([temp_selection]) & {
        @include toggle-vis-flex(75px, 0s, 0.5s);
      }
    }
    &-middle {
      @include toggle-vis-flex(300px, 0s, 0.5s);
      @include inner-flex();
      box-shadow: rgba(100, 100, 100, 0.2) 0px 0px 30px;
      background-color: rgba(255, 255, 255, 0.1);
      position: relative;
      max-width: 300px;
      border-radius: 75px;
      :host([temp_selection]) & {
        @include toggle-vis-flex(444px, 0s, 0.5s);
      }
    }
    &-bottom {
      @include toggle-vis-flex(200px, 0s, 0.5s);
      @include inner-flex();
      flex-direction: row;
      :host([temp_selection]) & {
        @include toggle-vis-flex(0px, 0s, 0.5s);
      }
    }
  }
}

.thermostat_part {
  &_top {
    line-height: 75px;
    flex: 0 0 75px;
    text-align: center;
    width: 100%;
    transition-property: flex, opacity;
    transition-delay: 0s;
    transition-duration: 1s;
    transition-timing-function: ease-in-out;
    overflow: hidden;
    :host([temp_selection]) & {
      opacity: 0;
      flex: 0 0 0px;
    }
    :host([temp_overlay]) & {
      flex: 0 0 50px;
    }
  }
  &_middle {
    flex: 0 0 150px;
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    font-size: 6rem;
    text-align: center;
    justify-content: center;
    flex-flow: column;
    :host([temp_selection]) & {
      width: 300px;
      flex: 0 0 400px;
    }
    :host([temp_overlay]) & {
      flex: 0 0 100px;
      font-size: 5.5em;
    }
  }
  &_bottom {
    @include toggle-vis-visible(0s, 0.5s);
    flex: 0 0 75px;
    width: 100%;
    overflow: hidden;
    position: relative;
    :host([temp_selection]) & {
      @include toggle-vis-hidden(0.5s, 0s);
      flex: 0 0 0px;
    }
    :host([temp_overlay]) & {
      flex: 0 0 150px;
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
  }
}

.text {
  pointer-events: none;
  &_maintemp {
    @include toggle-vis-visible(0s, 0.5s);
    :host([temp_selection]) & {
      @include toggle-vis-hidden(0.5s, 0s);
    }
  }
  &_temperature {
    @include toggle-vis-hidden(0.5s, 0s);
    font-size: 48px;
    align-self: center;
    text-align: center;
    text-transform: uppercase;
    font-weight: 700;
    :host([temp_selection]) & {
      @include toggle-vis-visible(0s, 0.5s);
    }
  }
}

.heatreq {
  pointer-events: none;
  flex: 0 0 100px;
  width: 24px;
  margin: 0px auto;
  transition-property: flex, margin;
  transition-delay: 0s;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  & svg {
    & path {
      opacity: 0.38;
      fill: #fff;
      :host([temp_heating~='heating_one']) & {
        &:nth-child(1) {
          opacity: 1;
        }
      }
      :host([temp_heating~='heating_two']) & {
        &:nth-child(1),
        &:nth-child(2) {
          opacity: 1;
        }
      }
      :host([temp_heating~='heating_three']) & {
        &:nth-child(1),
        &:nth-child(2),
        &:nth-child(3) {
          opacity: 1;
        }
      }
    }
  }
  :host([temp_overlay]) & {
    flex: 0 0 50px;
    overflow: hidden;
    margin: 0 auto;
  }
}

.overlay {
  flex: 0 0 0px;
  background-color: #fff;
  color: #213953;
  opacity: 0;
  transition-property: bottom, opacity;
  transition-delay: 0s, 0s;
  transition-duration: 1s, 1s;
  transition-timing-function: ease-in-out;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  width: 100%;
  padding: 0 0 26px 0;
  bottom: -100px;
  :host([temp_overlay]) & {
    flex: 0 0 100px;
    opacity: 1;
    transition-duration: 1s, 1s;
    bottom: 0px;
  }
  &_text {
    text-align: center;
    padding: 10px;
    width: calc(100% - 20px);
  }
}

.info {
  display: flex;
  align-items: center;
  max-height: 200px;
  opacity: 1;
  transition-property: max-height, opacity;
  transition-delay: 0s, 0s;
  transition-duration: 1s, 1s;
  transition-timing-function: ease-in-out;
  &_sensor {
    display: flex;
    align-items: center;
    flex-direction: column;
    width: 100px;
    &_label {
      font-size: 1rem;
      line-height: 3rem;
      font-weight: 300;
    }
    &_value {
      font-size: 1.8rem;
      line-height: 1.8rem;
      font-weight: 700;
    }
  }
  :host([temp_selection]) & {
    max-height: 0;
    opacity: 0;
    transition-delay: 0s, 0s;
    overflow: hidden;
  }
}

$airquality: (
  humid: linear-gradient(110deg, rgb(107, 160, 225), rgb(84, 99, 196)),
  cold: linear-gradient(110deg, rgb(107, 176, 179), rgb(77, 150, 153)),
  pleasant: linear-gradient(110deg, rgb(59, 206, 145), rgb(25, 184, 118)),
);
@each $class, $rule in $airquality {
  .tado-air .airqual.#{$class} {
    background: $rule;
  }
}

.tado-air {
  @include slide-card(400px);
  width: 400px;
  height: 600px;
  .airquality & {
    @include slide-card(0px);
  }

  .airqual {
    height: 100%;
    width: 100%;
    background: linear-gradient(110deg, rgb(107, 176, 179), rgb(77, 150, 153));
    font-size: 0.8em;
    color: #fff;
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-between;
    align-items: center;
    overflow: hidden;
    &__header {
      width: 100%;
      flex: 0 0 auto;
      padding: 16px;
      display: flex;
      flex-flow: row nowrap;
      justify-content: space-between;
      align-items: flex-start;
    }
    &-header__room-name {
      min-width: 30%;
      margin-top: 0;
      margin-right: 15px;
      font-size: 1.8em;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    &__footer {
      width: 100%;
      flex: 0 0 51px;
      padding-bottom: 16px;
      display: flex;
      flex-flow: row nowrap;
      justify-content: space-around;
      align-items: flex-end;
    }
    .thermal-comfort {
      max-width: 70%;
      &_status {
        margin: 0;
        font-size: 1.8em;
        text-transform: uppercase;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: right;
      }
    }
  }
  .measurement__label {
    margin-bottom: 3px;
    text-transform: uppercase;
    font-weight: 400;
  }
  .measurement__content,
  .value-with-alert {
    display: flex;
    justify-content: center;
  }
  .value-with-alert {
    align-items: center;
    position: relative;
  }
  .value-with-alert__alert {
    width: 12px;
    height: 12px;
    position: absolute;
    right: 100%;
    bottom: 5px;
    margin-right: 4px;
    fill: #fff;
    opacity: 0.7;
  }
  .value-with-alert__value {
    font-size: 1.5em;
  }
  .temperature {
    font-weight: 400;
  }
  .humidity {
    font-weight: 400;
  }
  .app-air-comfort-message {
    display: block;
    width: 100%;
    background-color: #fff;
  }
  .message {
    color: #485258;
    font-size: 14px;
  }
  .message figure {
    display: flex;
  }
  .stacked {
    margin: 16px 0;
    padding: 0 16px;
  }
  .text-center {
    text-align: center;
  }
  .bubble {
    flex: 0 0 246px;
    padding-top: 10px;
    position: relative;
    display: grid;
    grid-template-columns: 1fr 250px 1fr;
    grid-auto-rows: -webkit-min-content;
    grid-auto-rows: min-content;
    text-align: center;
    align-items: center;
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    text-transform: uppercase;
    &__label {
      &-top {
        grid-row-start: 1;
        grid-column-start: 2;
      }
      &-bottom {
        grid-row-start: 3;
        grid-column-start: 2;
      }
      &-left {
        grid-row-start: 2;
        grid-column-start: 1;
        text-align: right;
      }
      &-right {
        grid-row-start: 2;
        grid-column-start: 3;
      }
    }
    &__graph {
      grid-row-start: 2;
      grid-column-start: 2;
      position: relative;
      overflow: hidden;
      &-current_position {
        position: absolute;
      }
    }
    &__alert {
      position: absolute;
      bottom: -40px;
      width: 100%;
    }
  }
  .alert {
    display: inline-block;
    margin: auto;
    padding: 0 8px;
    line-height: 1.5em;
    font-size: 1em;
    font-weight: 400;
    text-transform: none;
    &--humid {
      background: #3849ac;
    }
  }
  .btn {
    cursor: pointer;
    display: inline-block;
    color: #000000;
    font-size: 0.9em;
    text-decoration: none;
    text-align: left;
    line-height: 2.5;
    padding: 0 1.5em;
    border-radius: 1.25em;
    border: none;
    transition: background-color 0.1s ease, box-shadow 0.15s ease;
    &--more {
      background-color: #ffffff;
      min-width: 137px;
      height: 34px;
      line-height: 34px;
      border-radius: 17px;
      text-align: center;
    }
  }
}
